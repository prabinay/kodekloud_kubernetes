How many applications are deployed in the app-space namespace?
Run the command: kubectl get deploy --namespace app-space and count the number of deployments.

Which namespace is the Ingress Resource deployed in?
Run the command: kubectl get ingress --all-namespaces and identify the namespace.

What is the name of the Ingress Resource?
Run the command: kubectl get ingress --all-namespaces and identify the name of Ingress Resource.

What is the Host configured on the Ingress Resource?
The host entry defines the domain name that users use to reach the application like www.google.com
Run the command: kubectl describe ingress --namespace app-space and look at Host under the Rules section.


If the requirement does not match any of the configured paths what service are the requests forwarded to?
look for default
You are requested to change the URLs at which the applications are made available.
Make the video application available at /stream.
Ingress: ingress-wear-watch

Path: /stream

Backend Service: video-service

Backend Service Port: 8080

Run the command: kubectl edit ingress --namespace app-space and change the path to the video streaming application to /stream.
Solution manifest file to change the path to the video streaming application to /stream as follows:

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
  name: ingress-wear-watch
  namespace: app-space
spec:
  rules:
  - http:
      paths:
      - backend:
          service:
            name: wear-service
            port: 
              number: 8080
        path: /wear
        pathType: Prefix
      - backend:
          service:
            name: video-service
            port: 
              number: 8080
        path: /stream
        pathType: Prefix



You are requested to add a new path to your ingress to make the food delivery application available to your customers.


Make the new application available at /eat.

CheckCompleteIncomplete
Ingress: ingress-wear-watch

Path: /eat

Backend Service: food-service

Backend Service Port: 8080

Solution manifest file to add a new path to our ingress service to make the application available at /eat as follows:

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
  name: ingress-wear-watch
  namespace: app-space
spec:
  rules:
  - http:
      paths:
      - backend:
          service:
            name: wear-service
            port: 
              number: 8080
        path: /wear
        pathType: Prefix
      - backend:
          service:
            name: video-service
            port: 
              number: 8080
        path: /stream
        pathType: Prefix
      - backend:
          service:
            name: food-service
            port: 
              number: 8080
        path: /eat
        pathType: Prefix


You are requested to make the new application available at /pay.


Identify and implement the best approach to making this application available on the ingress controller and test to make sure its working. Look into annotations: rewrite-target as well.

Ingress Created
Path: /pay
Configure correct backend service
Configure correct backend port

Create a new Ingress for the new pay application in the critical-space namespace.

Use the command kubectl get svc -n critical-space to know the service and port details.
Solution manifest file to create a new ingress service to make the application available at /pay as follows:

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: test-ingress
  namespace: critical-space
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
spec:
  rules:
  - http:
      paths:
      - path: /pay
        pathType: Prefix
        backend:
          service:
           name: pay-service
           port:
            number: 8282






Let us now deploy an Ingress Controller. First, create a namespace called ingress-nginx.
Run the command: kubectl create namespace ingress-nginx



The NGINX Ingress Controller requires a ConfigMap object. Create a ConfigMap object with name ingress-nginx-controller in the ingress-nginx namespace.
No data needs to be configured in the ConfigMap.

Run the command: kubectl create configmap ingress-nginx-controller --namespace ingress-nginx


The NGINX Ingress Controller requires two ServiceAccounts. Create both ServiceAccount with name ingress-nginx and ingress-nginx-admission in the ingress-nginx namespace.
Use the spec provided below.
Name: ingress-nginx
Name: ingress-nginx-admission

Run the below commands: kubectl create serviceaccount ingress-nginx --namespace ingress-nginx and
kubectl create serviceaccount ingress-nginx-admission --namespace ingress-nginx



Let us now deploy the Ingress Controller. Create the Kubernetes objects using the given file.
The Deployment and it's service configuration is given at /root/ingress-controller.yaml. There are several issues with it. Try to fix them.
Deployed in the correct namespace.
Replicas: 1
Use the right image
Namespace: ingress-nginx
Service name: ingress-nginx-controller
NodePort: 30080

Run :kubectl apply -f ingress-controller.yaml 




Create the ingress resource to make the applications available at /wear and /watch on the Ingress service.
Also, make use of rewrite-target annotation field: -
nginx.ingress.kubernetes.io/rewrite-target: /
Ingress resource comes under the namespace scoped, so don't forget to create the ingress in the app-space namespace.
Ingress Created
Path: /wear
Path: /watch
Configure correct backend service for /wear
Configure correct backend service for /watch
Configure correct backend port for /wear service
Configure correct backend port for /watch service





