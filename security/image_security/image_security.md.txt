1. What secret type must we choose for docker registry?  
Run the command kubectl create secret --help and identify it.  

2. We have an application running on our cluster. Let us explore it first. What image is the application using?  
Use the kubectl describe command to see more details (image and container name, labels etc).  
`kubectl describe po`  

3. We decided to use a modified version of the application from an internal private registry. Update the image of the deployment to use a new image from myprivateregistry.com:5000
The registry is located at myprivateregistry.com:5000. Don't worry about the credentials for now. We will configure them in the upcoming steps.  
Use the kubectl edit deployment command to edit the image name to myprivateregistry.com:5000/nginx:alpine  

4. Create a secret object with the credentials required to access the registry.  
Name: private-reg-cred  
Username: dock_user  
Password: dock_password  
Server: myprivateregistry.com:5000  
Email: dock_user@myprivateregistry.com  
Run the command: `kubectl create secret docker-registry private-reg-cred --docker-username=dock_user --docker-password=dock_password --docker-server=myprivateregistry.com:5000 --docker-email=dock_user@myprivateregistry.com`  

5. Configure the deployment to use credentials from the new secret to pull images from the private registry
Image Pull Secret: private-reg-cred  
Edit deployment using kubectl edit deploy web command and add imagePullSecrets section. Use private-reg-cred.  
Run the following command to edit the deployment:
`kubectl edit deploy web`
Replace web with the name of your deployment.
Locate the spec section in the editor. Underneath it, add the imagePullSecrets section as shown below:
`spec:  
  imagePullSecrets:  
  - name: private-reg-cred`
  # Rest of the deployment configuration...  




