Excercises:

1. How many StorageClasses exist in the cluster right now?  
Run the command: kubectl get sc and count the number of Storage Classes available in the cluster.  

2. What is the name of the Storage Class that does not support dynamic volume provisioning?  
Look for the storage class name that uses no-provisioner  
The local-storage storage class makes use of the no-provisioner and currently does not support dynamic provisioning.

Refer to the tab above the terminal (called Local Storage) to read more about it.  

3. What is the Volume Binding Mode used for this storage class (the one identified in the previous question)?  
Run the command: kubectl describe sc local-storage or kubectl get sc and look under the Volume Binding Mode section.  

4. What is the Provisioner used for the storage class called portworx-io-priority-high?  
Run the command: kubectl describe sc portworx-io-priority-high or kubectl get sc portworx-io-priority-high and look under the PROVISIONER section.  

5. Create a new PersistentVolumeClaim by the name of local-pvc that should bind to the volume local-pv.  
Inspect the pv local-pv for the specs.
PVC: local-pvc
Correct Access Mode?
Correct StorageClass Used?
PVC requests volume size = 500Mi?  

solution:
create `pvc.yaml` and create 

6. Why is the PVC in a pending state despite making a valid request to claim the volume called local-pv?  
Run the command: kubectl describe pvc local-pvc and look under the Events section.  
The StorageClass used by the PVC uses WaitForFirstConsumer volume binding mode. This means that the persistent volume will not bind to the claim until a pod makes use of the PVC to request storage.  


Note: The Storage Class called local-storage makes use of VolumeBindingMode set to WaitForFirstConsumer. This will delay the binding and provisioning of a PersistentVolume until a Pod using the PersistentVolumeClaim is created.  

7. Create a new pod called nginx with the image nginx:alpine. The Pod should make use of the PVC local-pvc and mount the volume at the path /var/www/html.  
The PV local-pv should in a bound state.
Pod created with the correct Image?
Pod uses PVC called local-pvc?
local-pv bound?
nginx pod running?
Volume mounted at the correct path?  

solution:
Use the command kubectl run to create a pod definition file for nginx pod with image nginx:alpine. Add mount volume path /var/www/html and pvc given in the details.

Alternatively, run the command:

kubectl run nginx --image=nginx:alpine --dry-run=client -oyaml > nginx.yaml  

8. Create a new Storage Class called delayed-volume-sc that makes use of the below specs:  
provisioner: kubernetes.io/no-provisioner
volumeBindingMode: WaitForFirstConsumer
Storage Class uses: kubernetes.io/no-provisioner ?
Storage Class volumeBindingMode set to WaitForFirstConsumer ?  

solution:  
manifest file to create a storage class `delayed-volume-sc`  
